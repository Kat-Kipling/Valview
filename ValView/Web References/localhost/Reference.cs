//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ValView.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ValoViewAPISoap", Namespace="http://tempuri.org/")]
    public partial class ValoViewAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getTournamentSeriesByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTournamentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTournamentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback attemptSignInOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPlayersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlayerIdByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPlayerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRanksOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDivisionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAgentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback editPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRegionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removePlayerFromTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPlayerToTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamIdByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTeamOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ValoViewAPI() {
            this.Url = global::ValView.Properties.Settings.Default.ValView_localhost_ValoViewAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getTournamentSeriesByNameCompletedEventHandler getTournamentSeriesByNameCompleted;
        
        /// <remarks/>
        public event getAllTournamentsCompletedEventHandler getAllTournamentsCompleted;
        
        /// <remarks/>
        public event getTournamentIdCompletedEventHandler getTournamentIdCompleted;
        
        /// <remarks/>
        public event attemptSignInCompletedEventHandler attemptSignInCompleted;
        
        /// <remarks/>
        public event getUserDetailsCompletedEventHandler getUserDetailsCompleted;
        
        /// <remarks/>
        public event getAllPlayersCompletedEventHandler getAllPlayersCompleted;
        
        /// <remarks/>
        public event getPlayerDetailsCompletedEventHandler getPlayerDetailsCompleted;
        
        /// <remarks/>
        public event getPlayerIdByNameCompletedEventHandler getPlayerIdByNameCompleted;
        
        /// <remarks/>
        public event getAllPlayerInfoCompletedEventHandler getAllPlayerInfoCompleted;
        
        /// <remarks/>
        public event getRanksCompletedEventHandler getRanksCompleted;
        
        /// <remarks/>
        public event getTeamsCompletedEventHandler getTeamsCompleted;
        
        /// <remarks/>
        public event getDivisionsCompletedEventHandler getDivisionsCompleted;
        
        /// <remarks/>
        public event getAgentsCompletedEventHandler getAgentsCompleted;
        
        /// <remarks/>
        public event getRolesCompletedEventHandler getRolesCompleted;
        
        /// <remarks/>
        public event deletePlayerCompletedEventHandler deletePlayerCompleted;
        
        /// <remarks/>
        public event editPlayerCompletedEventHandler editPlayerCompleted;
        
        /// <remarks/>
        public event addNewPlayerCompletedEventHandler addNewPlayerCompleted;
        
        /// <remarks/>
        public event getTeamInfoCompletedEventHandler getTeamInfoCompleted;
        
        /// <remarks/>
        public event getTeamDataCompletedEventHandler getTeamDataCompleted;
        
        /// <remarks/>
        public event getRegionsCompletedEventHandler getRegionsCompleted;
        
        /// <remarks/>
        public event removePlayerFromTeamCompletedEventHandler removePlayerFromTeamCompleted;
        
        /// <remarks/>
        public event addPlayerToTeamCompletedEventHandler addPlayerToTeamCompleted;
        
        /// <remarks/>
        public event addTeamCompletedEventHandler addTeamCompleted;
        
        /// <remarks/>
        public event getTeamIdByNameCompletedEventHandler getTeamIdByNameCompleted;
        
        /// <remarks/>
        public event deleteTeamCompletedEventHandler deleteTeamCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTournamentSeriesByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getTournamentSeriesByName(string tournamentName) {
            object[] results = this.Invoke("getTournamentSeriesByName", new object[] {
                        tournamentName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getTournamentSeriesByNameAsync(string tournamentName) {
            this.getTournamentSeriesByNameAsync(tournamentName, null);
        }
        
        /// <remarks/>
        public void getTournamentSeriesByNameAsync(string tournamentName, object userState) {
            if ((this.getTournamentSeriesByNameOperationCompleted == null)) {
                this.getTournamentSeriesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTournamentSeriesByNameOperationCompleted);
            }
            this.InvokeAsync("getTournamentSeriesByName", new object[] {
                        tournamentName}, this.getTournamentSeriesByNameOperationCompleted, userState);
        }
        
        private void OngetTournamentSeriesByNameOperationCompleted(object arg) {
            if ((this.getTournamentSeriesByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTournamentSeriesByNameCompleted(this, new getTournamentSeriesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllTournaments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllTournaments() {
            object[] results = this.Invoke("getAllTournaments", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllTournamentsAsync() {
            this.getAllTournamentsAsync(null);
        }
        
        /// <remarks/>
        public void getAllTournamentsAsync(object userState) {
            if ((this.getAllTournamentsOperationCompleted == null)) {
                this.getAllTournamentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTournamentsOperationCompleted);
            }
            this.InvokeAsync("getAllTournaments", new object[0], this.getAllTournamentsOperationCompleted, userState);
        }
        
        private void OngetAllTournamentsOperationCompleted(object arg) {
            if ((this.getAllTournamentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTournamentsCompleted(this, new getAllTournamentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTournamentId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTournamentId(string tournamentName) {
            object[] results = this.Invoke("getTournamentId", new object[] {
                        tournamentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTournamentIdAsync(string tournamentName) {
            this.getTournamentIdAsync(tournamentName, null);
        }
        
        /// <remarks/>
        public void getTournamentIdAsync(string tournamentName, object userState) {
            if ((this.getTournamentIdOperationCompleted == null)) {
                this.getTournamentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTournamentIdOperationCompleted);
            }
            this.InvokeAsync("getTournamentId", new object[] {
                        tournamentName}, this.getTournamentIdOperationCompleted, userState);
        }
        
        private void OngetTournamentIdOperationCompleted(object arg) {
            if ((this.getTournamentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTournamentIdCompleted(this, new getTournamentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/attemptSignIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int attemptSignIn(string username, string password) {
            object[] results = this.Invoke("attemptSignIn", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void attemptSignInAsync(string username, string password) {
            this.attemptSignInAsync(username, password, null);
        }
        
        /// <remarks/>
        public void attemptSignInAsync(string username, string password, object userState) {
            if ((this.attemptSignInOperationCompleted == null)) {
                this.attemptSignInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnattemptSignInOperationCompleted);
            }
            this.InvokeAsync("attemptSignIn", new object[] {
                        username,
                        password}, this.attemptSignInOperationCompleted, userState);
        }
        
        private void OnattemptSignInOperationCompleted(object arg) {
            if ((this.attemptSignInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.attemptSignInCompleted(this, new attemptSignInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getUserDetails(string username) {
            object[] results = this.Invoke("getUserDetails", new object[] {
                        username});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserDetailsAsync(string username) {
            this.getUserDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void getUserDetailsAsync(string username, object userState) {
            if ((this.getUserDetailsOperationCompleted == null)) {
                this.getUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("getUserDetails", new object[] {
                        username}, this.getUserDetailsOperationCompleted, userState);
        }
        
        private void OngetUserDetailsOperationCompleted(object arg) {
            if ((this.getUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDetailsCompleted(this, new getUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPlayers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllPlayers() {
            object[] results = this.Invoke("getAllPlayers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllPlayersAsync() {
            this.getAllPlayersAsync(null);
        }
        
        /// <remarks/>
        public void getAllPlayersAsync(object userState) {
            if ((this.getAllPlayersOperationCompleted == null)) {
                this.getAllPlayersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPlayersOperationCompleted);
            }
            this.InvokeAsync("getAllPlayers", new object[0], this.getAllPlayersOperationCompleted, userState);
        }
        
        private void OngetAllPlayersOperationCompleted(object arg) {
            if ((this.getAllPlayersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPlayersCompleted(this, new getAllPlayersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlayerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getPlayerDetails(int id) {
            object[] results = this.Invoke("getPlayerDetails", new object[] {
                        id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerDetailsAsync(int id) {
            this.getPlayerDetailsAsync(id, null);
        }
        
        /// <remarks/>
        public void getPlayerDetailsAsync(int id, object userState) {
            if ((this.getPlayerDetailsOperationCompleted == null)) {
                this.getPlayerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerDetailsOperationCompleted);
            }
            this.InvokeAsync("getPlayerDetails", new object[] {
                        id}, this.getPlayerDetailsOperationCompleted, userState);
        }
        
        private void OngetPlayerDetailsOperationCompleted(object arg) {
            if ((this.getPlayerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerDetailsCompleted(this, new getPlayerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlayerIdByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getPlayerIdByName(string name) {
            object[] results = this.Invoke("getPlayerIdByName", new object[] {
                        name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPlayerIdByNameAsync(string name) {
            this.getPlayerIdByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void getPlayerIdByNameAsync(string name, object userState) {
            if ((this.getPlayerIdByNameOperationCompleted == null)) {
                this.getPlayerIdByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlayerIdByNameOperationCompleted);
            }
            this.InvokeAsync("getPlayerIdByName", new object[] {
                        name}, this.getPlayerIdByNameOperationCompleted, userState);
        }
        
        private void OngetPlayerIdByNameOperationCompleted(object arg) {
            if ((this.getPlayerIdByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlayerIdByNameCompleted(this, new getPlayerIdByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPlayerInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllPlayerInfo() {
            object[] results = this.Invoke("getAllPlayerInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllPlayerInfoAsync() {
            this.getAllPlayerInfoAsync(null);
        }
        
        /// <remarks/>
        public void getAllPlayerInfoAsync(object userState) {
            if ((this.getAllPlayerInfoOperationCompleted == null)) {
                this.getAllPlayerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPlayerInfoOperationCompleted);
            }
            this.InvokeAsync("getAllPlayerInfo", new object[0], this.getAllPlayerInfoOperationCompleted, userState);
        }
        
        private void OngetAllPlayerInfoOperationCompleted(object arg) {
            if ((this.getAllPlayerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPlayerInfoCompleted(this, new getAllPlayerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRanks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getRanks() {
            object[] results = this.Invoke("getRanks", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getRanksAsync() {
            this.getRanksAsync(null);
        }
        
        /// <remarks/>
        public void getRanksAsync(object userState) {
            if ((this.getRanksOperationCompleted == null)) {
                this.getRanksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRanksOperationCompleted);
            }
            this.InvokeAsync("getRanks", new object[0], this.getRanksOperationCompleted, userState);
        }
        
        private void OngetRanksOperationCompleted(object arg) {
            if ((this.getRanksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRanksCompleted(this, new getRanksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTeams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getTeams() {
            object[] results = this.Invoke("getTeams", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamsAsync() {
            this.getTeamsAsync(null);
        }
        
        /// <remarks/>
        public void getTeamsAsync(object userState) {
            if ((this.getTeamsOperationCompleted == null)) {
                this.getTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamsOperationCompleted);
            }
            this.InvokeAsync("getTeams", new object[0], this.getTeamsOperationCompleted, userState);
        }
        
        private void OngetTeamsOperationCompleted(object arg) {
            if ((this.getTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamsCompleted(this, new getTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDivisions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getDivisions() {
            object[] results = this.Invoke("getDivisions", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getDivisionsAsync() {
            this.getDivisionsAsync(null);
        }
        
        /// <remarks/>
        public void getDivisionsAsync(object userState) {
            if ((this.getDivisionsOperationCompleted == null)) {
                this.getDivisionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDivisionsOperationCompleted);
            }
            this.InvokeAsync("getDivisions", new object[0], this.getDivisionsOperationCompleted, userState);
        }
        
        private void OngetDivisionsOperationCompleted(object arg) {
            if ((this.getDivisionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDivisionsCompleted(this, new getDivisionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAgents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAgents() {
            object[] results = this.Invoke("getAgents", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAgentsAsync() {
            this.getAgentsAsync(null);
        }
        
        /// <remarks/>
        public void getAgentsAsync(object userState) {
            if ((this.getAgentsOperationCompleted == null)) {
                this.getAgentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAgentsOperationCompleted);
            }
            this.InvokeAsync("getAgents", new object[0], this.getAgentsOperationCompleted, userState);
        }
        
        private void OngetAgentsOperationCompleted(object arg) {
            if ((this.getAgentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAgentsCompleted(this, new getAgentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getRoles() {
            object[] results = this.Invoke("getRoles", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getRolesAsync() {
            this.getRolesAsync(null);
        }
        
        /// <remarks/>
        public void getRolesAsync(object userState) {
            if ((this.getRolesOperationCompleted == null)) {
                this.getRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesOperationCompleted);
            }
            this.InvokeAsync("getRoles", new object[0], this.getRolesOperationCompleted, userState);
        }
        
        private void OngetRolesOperationCompleted(object arg) {
            if ((this.getRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesCompleted(this, new getRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletePlayer(int id) {
            this.Invoke("deletePlayer", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deletePlayerAsync(int id) {
            this.deletePlayerAsync(id, null);
        }
        
        /// <remarks/>
        public void deletePlayerAsync(int id, object userState) {
            if ((this.deletePlayerOperationCompleted == null)) {
                this.deletePlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePlayerOperationCompleted);
            }
            this.InvokeAsync("deletePlayer", new object[] {
                        id}, this.deletePlayerOperationCompleted, userState);
        }
        
        private void OndeletePlayerOperationCompleted(object arg) {
            if ((this.deletePlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editPlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editPlayer(int id, string name, int team, string country, int rank, int division, int mainRole, int secRole, int mainAgent, string imageUrl) {
            this.Invoke("editPlayer", new object[] {
                        id,
                        name,
                        team,
                        country,
                        rank,
                        division,
                        mainRole,
                        secRole,
                        mainAgent,
                        imageUrl});
        }
        
        /// <remarks/>
        public void editPlayerAsync(int id, string name, int team, string country, int rank, int division, int mainRole, int secRole, int mainAgent, string imageUrl) {
            this.editPlayerAsync(id, name, team, country, rank, division, mainRole, secRole, mainAgent, imageUrl, null);
        }
        
        /// <remarks/>
        public void editPlayerAsync(int id, string name, int team, string country, int rank, int division, int mainRole, int secRole, int mainAgent, string imageUrl, object userState) {
            if ((this.editPlayerOperationCompleted == null)) {
                this.editPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditPlayerOperationCompleted);
            }
            this.InvokeAsync("editPlayer", new object[] {
                        id,
                        name,
                        team,
                        country,
                        rank,
                        division,
                        mainRole,
                        secRole,
                        mainAgent,
                        imageUrl}, this.editPlayerOperationCompleted, userState);
        }
        
        private void OneditPlayerOperationCompleted(object arg) {
            if ((this.editPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editPlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addNewPlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addNewPlayer(string name, int team, string country, int rank, int division, int mainRole, int secRole, int mainAgent, string imageUrl) {
            this.Invoke("addNewPlayer", new object[] {
                        name,
                        team,
                        country,
                        rank,
                        division,
                        mainRole,
                        secRole,
                        mainAgent,
                        imageUrl});
        }
        
        /// <remarks/>
        public void addNewPlayerAsync(string name, int team, string country, int rank, int division, int mainRole, int secRole, int mainAgent, string imageUrl) {
            this.addNewPlayerAsync(name, team, country, rank, division, mainRole, secRole, mainAgent, imageUrl, null);
        }
        
        /// <remarks/>
        public void addNewPlayerAsync(string name, int team, string country, int rank, int division, int mainRole, int secRole, int mainAgent, string imageUrl, object userState) {
            if ((this.addNewPlayerOperationCompleted == null)) {
                this.addNewPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewPlayerOperationCompleted);
            }
            this.InvokeAsync("addNewPlayer", new object[] {
                        name,
                        team,
                        country,
                        rank,
                        division,
                        mainRole,
                        secRole,
                        mainAgent,
                        imageUrl}, this.addNewPlayerOperationCompleted, userState);
        }
        
        private void OnaddNewPlayerOperationCompleted(object arg) {
            if ((this.addNewPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewPlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTeamInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getTeamInfo(int id) {
            object[] results = this.Invoke("getTeamInfo", new object[] {
                        id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTeamInfoAsync(int id) {
            this.getTeamInfoAsync(id, null);
        }
        
        /// <remarks/>
        public void getTeamInfoAsync(int id, object userState) {
            if ((this.getTeamInfoOperationCompleted == null)) {
                this.getTeamInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamInfoOperationCompleted);
            }
            this.InvokeAsync("getTeamInfo", new object[] {
                        id}, this.getTeamInfoOperationCompleted, userState);
        }
        
        private void OngetTeamInfoOperationCompleted(object arg) {
            if ((this.getTeamInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamInfoCompleted(this, new getTeamInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTeamData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getTeamData(int id) {
            object[] results = this.Invoke("getTeamData", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamDataAsync(int id) {
            this.getTeamDataAsync(id, null);
        }
        
        /// <remarks/>
        public void getTeamDataAsync(int id, object userState) {
            if ((this.getTeamDataOperationCompleted == null)) {
                this.getTeamDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamDataOperationCompleted);
            }
            this.InvokeAsync("getTeamData", new object[] {
                        id}, this.getTeamDataOperationCompleted, userState);
        }
        
        private void OngetTeamDataOperationCompleted(object arg) {
            if ((this.getTeamDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamDataCompleted(this, new getTeamDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRegions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getRegions() {
            object[] results = this.Invoke("getRegions", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getRegionsAsync() {
            this.getRegionsAsync(null);
        }
        
        /// <remarks/>
        public void getRegionsAsync(object userState) {
            if ((this.getRegionsOperationCompleted == null)) {
                this.getRegionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRegionsOperationCompleted);
            }
            this.InvokeAsync("getRegions", new object[0], this.getRegionsOperationCompleted, userState);
        }
        
        private void OngetRegionsOperationCompleted(object arg) {
            if ((this.getRegionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRegionsCompleted(this, new getRegionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removePlayerFromTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removePlayerFromTeam(int id) {
            this.Invoke("removePlayerFromTeam", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void removePlayerFromTeamAsync(int id) {
            this.removePlayerFromTeamAsync(id, null);
        }
        
        /// <remarks/>
        public void removePlayerFromTeamAsync(int id, object userState) {
            if ((this.removePlayerFromTeamOperationCompleted == null)) {
                this.removePlayerFromTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePlayerFromTeamOperationCompleted);
            }
            this.InvokeAsync("removePlayerFromTeam", new object[] {
                        id}, this.removePlayerFromTeamOperationCompleted, userState);
        }
        
        private void OnremovePlayerFromTeamOperationCompleted(object arg) {
            if ((this.removePlayerFromTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePlayerFromTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addPlayerToTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addPlayerToTeam(int playerId, int teamId) {
            this.Invoke("addPlayerToTeam", new object[] {
                        playerId,
                        teamId});
        }
        
        /// <remarks/>
        public void addPlayerToTeamAsync(int playerId, int teamId) {
            this.addPlayerToTeamAsync(playerId, teamId, null);
        }
        
        /// <remarks/>
        public void addPlayerToTeamAsync(int playerId, int teamId, object userState) {
            if ((this.addPlayerToTeamOperationCompleted == null)) {
                this.addPlayerToTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPlayerToTeamOperationCompleted);
            }
            this.InvokeAsync("addPlayerToTeam", new object[] {
                        playerId,
                        teamId}, this.addPlayerToTeamOperationCompleted, userState);
        }
        
        private void OnaddPlayerToTeamOperationCompleted(object arg) {
            if ((this.addPlayerToTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPlayerToTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addTeam(string teamName, int regionId, string country) {
            this.Invoke("addTeam", new object[] {
                        teamName,
                        regionId,
                        country});
        }
        
        /// <remarks/>
        public void addTeamAsync(string teamName, int regionId, string country) {
            this.addTeamAsync(teamName, regionId, country, null);
        }
        
        /// <remarks/>
        public void addTeamAsync(string teamName, int regionId, string country, object userState) {
            if ((this.addTeamOperationCompleted == null)) {
                this.addTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTeamOperationCompleted);
            }
            this.InvokeAsync("addTeam", new object[] {
                        teamName,
                        regionId,
                        country}, this.addTeamOperationCompleted, userState);
        }
        
        private void OnaddTeamOperationCompleted(object arg) {
            if ((this.addTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTeamIdByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getTeamIdByName(string name) {
            object[] results = this.Invoke("getTeamIdByName", new object[] {
                        name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamIdByNameAsync(string name) {
            this.getTeamIdByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void getTeamIdByNameAsync(string name, object userState) {
            if ((this.getTeamIdByNameOperationCompleted == null)) {
                this.getTeamIdByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamIdByNameOperationCompleted);
            }
            this.InvokeAsync("getTeamIdByName", new object[] {
                        name}, this.getTeamIdByNameOperationCompleted, userState);
        }
        
        private void OngetTeamIdByNameOperationCompleted(object arg) {
            if ((this.getTeamIdByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamIdByNameCompleted(this, new getTeamIdByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteTeam(int id) {
            this.Invoke("deleteTeam", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deleteTeamAsync(int id) {
            this.deleteTeamAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteTeamAsync(int id, object userState) {
            if ((this.deleteTeamOperationCompleted == null)) {
                this.deleteTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTeamOperationCompleted);
            }
            this.InvokeAsync("deleteTeam", new object[] {
                        id}, this.deleteTeamOperationCompleted, userState);
        }
        
        private void OndeleteTeamOperationCompleted(object arg) {
            if ((this.deleteTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getTournamentSeriesByNameCompletedEventHandler(object sender, getTournamentSeriesByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTournamentSeriesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTournamentSeriesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAllTournamentsCompletedEventHandler(object sender, getAllTournamentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTournamentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTournamentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getTournamentIdCompletedEventHandler(object sender, getTournamentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTournamentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTournamentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void attemptSignInCompletedEventHandler(object sender, attemptSignInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class attemptSignInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal attemptSignInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getUserDetailsCompletedEventHandler(object sender, getUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAllPlayersCompletedEventHandler(object sender, getAllPlayersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPlayerDetailsCompletedEventHandler(object sender, getPlayerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getPlayerIdByNameCompletedEventHandler(object sender, getPlayerIdByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlayerIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlayerIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAllPlayerInfoCompletedEventHandler(object sender, getAllPlayerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPlayerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPlayerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getRanksCompletedEventHandler(object sender, getRanksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRanksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRanksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getTeamsCompletedEventHandler(object sender, getTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getDivisionsCompletedEventHandler(object sender, getDivisionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDivisionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDivisionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAgentsCompletedEventHandler(object sender, getAgentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAgentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAgentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getRolesCompletedEventHandler(object sender, getRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void deletePlayerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void editPlayerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void addNewPlayerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getTeamInfoCompletedEventHandler(object sender, getTeamInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getTeamDataCompletedEventHandler(object sender, getTeamDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getRegionsCompletedEventHandler(object sender, getRegionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRegionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRegionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void removePlayerFromTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void addPlayerToTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void addTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getTeamIdByNameCompletedEventHandler(object sender, getTeamIdByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void deleteTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591